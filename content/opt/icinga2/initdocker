#!/bin/bash

#/******************************************************************************
# * docker-icinga2                                                             *
# * Dockerfile for Icinga 2 and Icinga Web 2                                   *
# * Copyright (C) 2015 Icinga Development Team (http://www.icinga.org)         *
# *                                                                            *
# * This program is free software; you can redistribute it and/or              *
# * modify it under the terms of the GNU General Public License                *
# * as published by the Free Software Foundation; either version 2             *
# * of the License, or (at your option) any later version.                     *
# *                                                                            *
# * This program is distributed in the hope that it will be useful,            *
# * but WITHOUT ANY WARRANTY; without even the implied warranty of             *
# * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the              *
# * GNU General Public License for more details.                               *
# *                                                                            *
# * You should have received a copy of the GNU General Public License          *
# * along with this program; if not, write to the Free Software Foundation     *
# * Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301, USA.             *
# ******************************************************************************/

set -e

function echo_log {
	DATE='date +%Y/%m/%d:%H:%M:%S'
	echo `$DATE`" $1"
}

initfile=/etc/icinga2/init.done

# update to latest snapshot packages
echo_log "Fetching latest icinga* snapshot packages."
{
  #yum update --enablerepo=icinga-snapshot-builds -y icinga2 icinga2-ido-mysql icingaweb2 icingacli
  #yum clean all
  echo "all good"
} 

echo_log "Validating the icinga2 configuration first."
if ! icinga2 daemon -C; then
	echo_log "Icinga 2 config validation failed. Stopping the container."
	exit 1
fi


if [ ! -f "${initfile}" ]; then
        #echo_log "Starting DB schema import. This might take a while (20sec+)."
        #mysql_install_db --user=mysql --ldata=/var/lib/mysql 2>&1 >/dev/null
        #/usr/bin/mysqld_safe 2>&1 >/dev/null &
        echo_log "pause for mysql to start"
        sleep 10s
        echo_log "populating mysql db"
        mysql -hmysql -uroot -p$MYSQL_ENV_MYSQL_ROOT_PASSWORD -e "CREATE DATABASE IF NOT EXISTS icinga ; GRANT ALL ON icinga.* TO icinga@'%' IDENTIFIED BY '$MYSQL_ENV_MYSQL_ROOT_PASSWORD';"
        mysql -hmysql -uicinga -p$MYSQL_ENV_MYSQL_ROOT_PASSWORD icinga < /usr/share/icinga2-ido-mysql/schema/mysql.sql
        mysql -hmysql -uroot -p$MYSQL_ENV_MYSQL_ROOT_PASSWORD -e "CREATE DATABASE IF NOT EXISTS icingaweb2 ; GRANT ALL ON icingaweb2.* TO icingaweb2@'%' IDENTIFIED BY '$MYSQL_ENV_MYSQL_ROOT_PASSWORD';"
        echo_log "populating mysql db pw info to icingaweb2"
        mysql -hmysql -uicingaweb2 -p$MYSQL_ENV_MYSQL_ROOT_PASSWORD icingaweb2 < /usr/share/icingaweb2/etc/schema/mysql.schema.sql
        echo_log "done pup db"
        mysql -hmysql -uicingaweb2 -p$MYSQL_ENV_MYSQL_ROOT_PASSWORD icingaweb2 -e "INSERT INTO icingaweb_user (name, active, password_hash) VALUES ('icingaadmin', 1, '\$1\$iQSrnmO9\$T3NVTu0zBkfuim4lWNRmH.');"
        #killall mysqld
        #sleep 1s
        echo_log "populating mysql db pw info to icingaweb2"
        sed -i "s/REPLACEME_MYSQL_PASS/$MYSQL_ENV_MYSQL_ROOT_PASSWORD/g" /etc/icingaweb2/resources.ini

        echo_log "Enabling icinga2 features."
        # enable icinga2 features if not already there
        icinga2 feature enable ido-mysql command

        mkdir -p /etc/icingaweb2/enabledModules
        echo_log "Enabling icingaweb2 modules."
        if [[ -L /etc/icingaweb2/enabledModules/monitoring ]]; then echo "Symlink for /etc/icingaweb2/enabledModules/monitoring exists already...skipping"; else ln -s /usr/share/icingaweb2/modules/monitoring /etc/icingaweb2/enabledModules/monitoring; fi
        if [[ -L /etc/icingaweb2/enabledModules/doc ]]; then echo "Symlink for /etc/icingaweb2/enabledModules/doc exists already...skipping"; else ln -s /usr/share/icingaweb2/modules/doc /etc/icingaweb2/enabledModules/doc; fi
        if [[ -L /etc/icingaweb2/enabledModules/setup ]]; then echo "Symlink for /etc/icingaweb2/enabledModules/setup exists already...skipping"; else ln -s /usr/share/icingaweb2/modules/setup /etc/icingaweb2/enabledModules/setup; fi
        if [[ -L /etc/icingaweb2/enabledModules/iframe ]]; then echo "Symlink for /etc/icingaweb2/enabledModules/iframe exists already...skipping"; else ln -s /usr/share/icingaweb2/modules/iframe /etc/icingaweb2/enabledModules/iframe; fi

        #initialize icinga ido-mysql.conf
        cp /etc/icinga2/ido-mysql.conf.template /etc/icinga2/features-enabled/ido-mysql.conf
        sed -i "s/MYSQL_PORT_3306_TCP_ADDR/$MYSQL_PORT_3306_TCP_ADDR/g" /etc/icinga2/features-enabled/ido-mysql.conf
        sed -i "s/MYSQL_ENV_MYSQL_ROOT_PASSWORD/$MYSQL_ENV_MYSQL_ROOT_PASSWORD/g" /etc/icinga2/features-enabled/ido-mysql.conf
        chmod 600 /etc/icinga2/features-enabled/ido-mysql.conf
        chown nagios. /etc/icinga2/features-enabled/ido-mysql.conf

        touch ${initfile}
fi

if [ -n $SMTP_ENABLED ]; then
  echo_log "Enabling SMTP."

cat <<EOF2 >/etc/ssmtp/ssmtp.conf
root=postmaster
AuthUser=$SMTP_USER
AuthPass=$SMTP_PASS
mailhub=$SMTP_DOMAIN:$SMTP_PORT
UseSTARTTLS=YES
rewriteDomain=$DOMAIN
hostname=$HOSTNAME
FromLineOverride=YES
EOF2

fi


if [ -n $ICINGA2_FEATURE_GRAPHITE ]; then
  echo_log "Enabling Icinga 2 Graphite feature."
  icinga2 feature enable graphite

cat <<EOF >/etc/icinga2/features-enabled/graphite.conf
/**
 * The GraphiteWriter type writes check result metrics and
 * performance data to a graphite tcp socket.
 */

library "perfdata"

object GraphiteWriter "graphite" {
  host = "$ICINGA2_FEATURE_GRAPHITE_HOST"
  port = "$ICINGA2_FEATURE_GRAPHITE_PORT"
}
EOF

fi

mkdir /run/icinga2
mkdir /var/log/icingaweb2
chmod 777 /var/log/icingaweb2
chown nagios. /run/icinga2
echo_log "Starting Supervisor. CTRL-C will stop the container."
/usr/bin/supervisord -c /etc/supervisord.conf >> /dev/null
